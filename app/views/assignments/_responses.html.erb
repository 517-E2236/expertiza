<!-- check if instructor/TA has been mapped to current team -->
<% reviewer = Participant.find_by(:parent_id => @assignment.id, :user_id => session[:user].id)%>
<% @mapping = ReviewResponseMap.find_by(:reviewed_object_id => @assignment.id, :reviewer_id => reviewer.id, :reviewee_id => team.id) %>

<!-- If mapping is nil, a response cannot be created. So user should be able to "Begin Review" during any review stage, or after deadline has passed -->
<% if @mapping.nil? && (@assignment.get_current_stage() == "review" || @assignment.get_current_stage() == "Finished")  %>
  <% ReviewResponseMap.create(reviewee_id: team.id, reviewer_id: reviewer.id, reviewed_object_id: @assignment.id) %>
  <% map = ReviewResponseMap.find_by(reviewee_id: team.id, reviewer_id: reviewer.id, reviewed_object_id: @assignment.id) %>
  <%= link_to 'Begin review', { controller: 'response', action: 'new', :id => map.id, :return => "ta_review" } %><br>

<!-- Any time during review or after deadline, user is given the flexibility to begin, edit or update their review -->
<% elsif @assignment.get_current_stage() == "review" ||  @assignment.get_current_stage() == "Finished" %>
  <% map1 = ReviewResponseMap.find_by(reviewee_id: team.id, reviewer_id: reviewer.id, reviewed_object_id: @assignment.id) %>
  <% @sorted_responses = Array.new %>
  <% @sorted_responses = Response.where(:map_id => map1.id) %>
  
  <!-- This means that mapping is created, but user never began the review. Hence linking to "Begin Review" -->
  <% if @sorted_responses.empty?%>
    <%= link_to 'Begin review', { controller: 'response', action: 'new', :id => map1.id, :return => "ta_review" } %><br>
  <% else %>

    <!-- There is at least more than one response. Hence we obtain latest response of them all. -->
    <% @sorted_responses = @sorted_responses.sort_by {|obj| obj.updated_at} # the latest should be at the last %>
    <% @latest_response = @sorted_responses.last %>

    <!-- Getting current round as last response round in unavailable -->
    <%if @latest_response.round.nil?%>        
        <% last_response_round = AssignmentDueDate.done_in_assignment_round(@assignment.id, @latest_response) %>

    <!-- Getting round in which the last response was given -->
    <%else%>
        <% last_response_round = @latest_response.round %>
    <%end%>
    <% current_round = @assignment.number_of_current_round(topic_identifier) %>
    <!-- Always displaying "View Review" link for latest response, as long as at least one response exists -->
    <%= link_to "View review", {:controller => 'response', :action => 'view', :id => @latest_response.id} %><br>
    
    <% if last_response_round == current_round %>
      <% latest_submission = team.most_recent_submission %>
      
      <!-- If review have not submited yet, it will allow "edit" it-->
      <% if !@latest_response.is_submitted %>
        <%= link_to "Edit review", {:controller => 'response', :action => 'edit', :id => @latest_response.id, :return => "ta_review" } %>
      
      <!-- if team has updated their submission,it will allow to "update" review -->
      <% else %>
        <%= link_to "Update review", {:controller => 'response', :action => 'new', :id => map1.id, :return => "ta_review" } %>
      <%end%>

    <!-- if the round change, it will allowed "update review" -->
    <% else %>
      <%= link_to "Update review", {:controller => 'response', :action => 'new', :id => map1.id, :return => "ta_review" } %>
    <% end %>
  <% end %>
<% end %>